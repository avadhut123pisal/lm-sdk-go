// Code generated by go-swagger; DO NOT EDIT.

package lm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	//"io/ioutil"
	"log"
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/logicmonitor/lm-sdk-go/models"
)

// AddCollectorReader is a Reader for the AddCollector structure.
type AddLmotelCollectorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddLmotelCollectorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {

	// responseData, err := ioutil.ReadAll(response.Body())
    // if err != nil {
    //     log.Fatal(err)
    // }
    // responseString := string(responseData)
    // log.Println(responseString)
	switch response.Code() {

	case 200:
		result := NewAddLmotelCollectorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		log.Println(result.Payload)
		return result, nil

	default:
		result := NewAddLmotelCollectorDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAddCollectorOK creates a AddCollectorOK with default headers values
func NewAddLmotelCollectorOK() *AddLmotelCollectorOK {
	return &AddLmotelCollectorOK{}
}

/*AddCollectorOK handles this case with default header values.

successful operation
*/
type AddLmotelCollectorOK struct {
	Payload *models.LmotelCollectorData // Lmotel colector model file
}

func (o *AddLmotelCollectorOK) LmotelError() string {
	return fmt.Sprintf("[POST /setting/collectors/collector][%d] addLMotelCollectorOK  %+v", 200, o.Payload)
}

func (o *AddLmotelCollectorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LmotelCollectorData)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddCollectorDefault creates a AddCollectorDefault with default headers values
func NewAddLmotelCollectorDefault(code int) *AddCollectorDefault {
	return &AddCollectorDefault{
		_statusCode: code,
	}
}

/*AddCollectorDefault handles this case with default header values.

Error
*/
type AddLmotelCollectorDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the add collector default response
func (o *AddLmotelCollectorDefault) LmotelCode() int {
	return o._statusCode
}

func (o *AddLmotelCollectorDefault) LmotelError() string {
	return fmt.Sprintf("[POST /setting/collector/collectors][%d] addLmotelCollector default  %+v", o._statusCode, o.Payload)
}

func (o *AddLmotelCollectorDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
